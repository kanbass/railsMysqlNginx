基本的にこちらのサイトを参考に作成しました。
https://qiita.com/eighty8/items/0288ab9c127ddb683315

まずは以下のようなディレクトリ構成で作成します。
containers
	nginx
		Dockerfile
		nginx.conf
db
	grant_user.sql
	mysql_data
docker-compose.yml
Dockerfile
environments
	env
src
	Gemfile
	Gemfile.lock

このディレクトリまで移動して、以下のコマンドでRailsアプリケーションをnewします
docker-compose run --rm app rails new . --force --database=mysql --skip-bundle
生成されたRailsアプリの所有権が root:root となっているので（Dockerの操作は基本すべてroot権限で実行されるため）、現在のログインユーザーに変更しておきます。
sudo chown -R $USER:$USER .
config/puma.rbが作成されているので、以下の内容を記述する。
============
threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }.to_i
threads threads_count, threads_count
port        ENV.fetch("PORT") { 3000 }
environment ENV.fetch("RAILS_ENV") { "development" }
plugin :tmp_restart

app_root = File.expand_path("../..", __FILE__)
bind "unix://#{app_root}/tmp/sockets/puma.sock"

stdout_redirect "#{app_root}/log/puma.stdout.log", "#{app_root}/log/puma.stderr.log", true
================
config/database.ymlも以下の内容を記述する
=========
default: &default
  adapter: mysql2
  encoding: utf8
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: <%= ENV.fetch('MYSQL_USER') { 'root' } %>
  password: <%= ENV.fetch('MYSQL_PASSWORD') { 'password' } %>
  host: db

development:
  <<: *default
  database: webapp_development

test:
  <<: *default
  database: webapp_test
  ===========
  
docker-compose build
docker-compose up -d
docker-compose exec db mysql -u root -p -e"$(cat db/grant_user.sql)"
docker-compose exec app rails db:create
